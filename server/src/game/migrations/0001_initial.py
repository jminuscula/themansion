# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-09-07 12:46
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('title', models.CharField(max_length=64)),
                ('bio', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CharacterAbility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
                ('description', models.CharField(max_length=512)),
                ('action_phase', models.CharField(choices=[('room', 'ROOM'), ('passive', 'PASSIVE'), ('voting', 'VOTING'), ('night', 'NIGHT'), ('day', 'DAY')], max_length=16, null=True)),
            ],
            options={
                'verbose_name_plural': 'character abilities',
            },
        ),
        migrations.CreateModel(
            name='CharacterObjective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('description', models.CharField(max_length=256)),
                ('trigger', models.CharField(choices=[('execute', 'EXECUTE'), ('killed', 'KILLED'), ('kill', 'KILL'), ('terrorize', 'TERRORIZE'), ('terrorized', 'TERRORIZED'), ('executed', 'EXECUTED'), ('endgame', 'ENDGAME'), ('dead', 'DEAD')], max_length=16)),
                ('points', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='games_owned', to=settings.AUTH_USER_MODEL)),
                ('current_day', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='current_day', to='game.Day')),
            ],
        ),
        migrations.CreateModel(
            name='GameCharacterAbility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available', models.BooleanField(default=True)),
                ('ability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abilities', to='game.CharacterAbility')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characters', to='game.Character')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abilities', to='game.Game')),
            ],
            options={
                'verbose_name_plural': 'game character abilities',
                'default_related_name': 'abilities',
            },
        ),
        migrations.CreateModel(
            name='GameCharacterObjective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0)),
                ('complete', models.BooleanField(default=False)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objectives', to='game.Character')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objectives', to='game.Game')),
                ('objective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objectives', to='game.CharacterObjective')),
            ],
            options={
                'default_related_name': 'objectives',
            },
        ),
        migrations.CreateModel(
            name='GameRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_open', models.BooleanField(default=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='game.Game')),
            ],
            options={
                'default_related_name': 'rooms',
            },
        ),
        migrations.CreateModel(
            name='Kill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Night',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0)),
                ('turns', models.IntegerField(default=3)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nights', to='game.Game')),
            ],
        ),
        migrations.CreateModel(
            name='NightAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('attack_blank', 'ATTACK_BLANK'), ('pick_weapon', 'PICK_WEAPON'), ('attack_defend', 'ATTACK_DEFEND'), ('special', 'SPECIAL'), ('close_door', 'CLOSE_DOOR'), ('attack_kill', 'ATTACK_KILL'), ('open_door', 'OPEN_DOOR'), ('move', 'MOVE')], max_length=32)),
                ('night', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='game.Night')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alive', models.BooleanField(default=True)),
                ('turns_to_die', models.IntegerField(blank=True, null=True)),
                ('hidden', models.BooleanField(default=False)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='players', to='game.Character')),
                ('current_room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='players_here', to='game.GameRoom')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='game.Game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_related_name': 'players',
            },
        ),
        migrations.CreateModel(
            name='PlayerWeapon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ammo', models.IntegerField(null=True)),
                ('picked_at', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='game.GameRoom')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('room_type', models.CharField(choices=[('kitchen', 'KITCHEN'), ('dormitory', 'DORMITORY'), ('hall', 'HALL'), ('basement', 'BASEMENT'), ('observatory', 'OBSERVATORY'), ('library', 'LIBRARY'), ('basic', 'BASIC')], max_length=16)),
                ('connections', models.ManyToManyField(blank=True, related_name='passages', related_query_name='connected_with', to='game.Room')),
            ],
        ),
        migrations.CreateModel(
            name='Terror',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ghost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terrorizations', to='game.Player')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Room')),
                ('terrorized', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terrors', to='game.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, unique=True)),
                ('description', models.CharField(max_length=256)),
                ('weapon_type', models.CharField(choices=[('stunt', 'STUNT'), ('gun', 'GUN'), ('knife', 'KNIFE'), ('poison', 'POISON')], max_length=16)),
                ('max_ammo', models.IntegerField(blank=True, null=True)),
                ('starting_ammo', models.IntegerField(blank=True, null=True)),
                ('resource', models.BooleanField(default=False)),
                ('intention', models.BooleanField(default=True)),
                ('effect_turns', models.IntegerField(blank=True, null=True)),
                ('starting_room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='game.Room')),
            ],
        ),
        migrations.AddField(
            model_name='playerweapon',
            name='weapon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Weapon'),
        ),
        migrations.AddField(
            model_name='player',
            name='weapons',
            field=models.ManyToManyField(related_name='players', through='game.PlayerWeapon', to='game.Weapon'),
        ),
        migrations.AddField(
            model_name='nightaction',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='night_turns', to='game.Player'),
        ),
        migrations.AddField(
            model_name='nightaction',
            name='player_target',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='game.Player'),
        ),
        migrations.AddField(
            model_name='nightaction',
            name='room_target',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='game.GameRoom'),
        ),
        migrations.AddField(
            model_name='nightaction',
            name='weapon_target',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='game.Weapon'),
        ),
        migrations.AddField(
            model_name='kill',
            name='killed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deaths', to='game.Player'),
        ),
        migrations.AddField(
            model_name='kill',
            name='killer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kills', to='game.Player'),
        ),
        migrations.AddField(
            model_name='kill',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='killings', to='game.GameRoom'),
        ),
        migrations.AddField(
            model_name='kill',
            name='weapon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='game.PlayerWeapon'),
        ),
        migrations.AddField(
            model_name='gameroom',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='game.Room'),
        ),
        migrations.AddField(
            model_name='gameroom',
            name='weapons',
            field=models.ManyToManyField(blank=True, related_name='rooms', to='game.Weapon'),
        ),
        migrations.AddField(
            model_name='game',
            name='current_night',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='current_night', to='game.Night'),
        ),
        migrations.AddField(
            model_name='game',
            name='game_players',
            field=models.ManyToManyField(through='game.Player', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='game',
            name='game_rooms',
            field=models.ManyToManyField(through='game.GameRoom', to='game.Room'),
        ),
        migrations.AddField(
            model_name='day',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='days', to='game.Game'),
        ),
        migrations.AddField(
            model_name='characterability',
            name='room',
            field=models.ManyToManyField(blank=True, to='game.Room'),
        ),
        migrations.AddField(
            model_name='character',
            name='character_abilities',
            field=models.ManyToManyField(through='game.GameCharacterAbility', to='game.CharacterAbility'),
        ),
        migrations.AddField(
            model_name='character',
            name='character_objectives',
            field=models.ManyToManyField(through='game.GameCharacterObjective', to='game.CharacterObjective'),
        ),
        migrations.AlterUniqueTogether(
            name='player',
            unique_together=set([('game', 'character')]),
        ),
        migrations.AlterUniqueTogether(
            name='kill',
            unique_together=set([('killer', 'killed')]),
        ),
        migrations.AlterUniqueTogether(
            name='gameroom',
            unique_together=set([('game', 'room')]),
        ),
        migrations.AlterUniqueTogether(
            name='gamecharacterobjective',
            unique_together=set([('game', 'character', 'objective')]),
        ),
        migrations.AlterUniqueTogether(
            name='gamecharacterability',
            unique_together=set([('game', 'character', 'ability')]),
        ),
    ]
